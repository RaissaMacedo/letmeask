{"ast":null,"code":"var _jsxFileName = \"/media/raissa/2606497006494253/aulas-react/new_aulas/letmeask/src/pages/Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth();\n  const params = useParams();\n  const [newQuestion, setNewQuestion] = useState('');\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() == '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You  must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user === null || user === void 0 ? void 0 : user.name,\n        avatar: user.avatar\n      },\n      isHighligted: false,\n      inAnwsered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  async function handleLikeQuestion(questionId, likeId) {\n    if (likeId) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove();\n    } else {\n      await database.ref(`rooms/${roomId}/questions/${questionId}/likes/`).push({\n        authorId: user === null || user === void 0 ? void 0 : user.id\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O que voc\\xEA quer perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 28\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 57\n            }, this), \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHiglighted,\n            children: !question.isAnswered && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `like-button ${question.likeId ? 'liked' : ''}`,\n              type: \"button\",\n              \"aria-label\": \"Marcar como gostei\",\n              onClick: () => handleLikeQuestion(question.id, question.likeId),\n              children: [question.likeCount > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: question.likeCount\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 70\n              }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                version: \"1.0\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                width: \"24\",\n                height: \"23\",\n                viewBox: \"0 0 24 24\",\n                preserveAspectRatio: \"xMidYMid meet\",\n                children: /*#__PURE__*/_jsxDEV(\"g\", {\n                  transform: \"translate(0.000000,24.000000) scale(0.100000,-0.100000)\",\n                  fill: \"#000000\",\n                  strokeWidth: \"1.5\",\n                  children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M110 215 c0 -8 -11 -25 -26 -38 -22 -21 -25 -30 -22 -83 l3 -59 57\\r -3 57 -3 21 41 c28 54 24 84 -12 88 -21 3 -28 9 -28 26 0 25 -17 46 -37 46 -7\\r 0 -13 -7 -13 -15z m25 -45 c-6 -29 -5 -30 29 -30 41 0 43 -5 19 -55 -15 -32\\r -20 -35 -60 -35 l-43 0 0 46 c0 32 7 54 23 74 29 37 40 37 32 0z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                    d: \"M20 95 c0 -37 4 -65 10 -65 6 0 10 28 10 65 0 37 -4 65 -10 65 -6 0\\r -10 -28 -10 -65z\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this)\n          }, question.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"XYMVeuwfXHPVAdm6BT+qm/rIeCU=\", false, function () {\n  return [useAuth, useParams, useRoom];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/media/raissa/2606497006494253/aulas-react/new_aulas/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","Question","RoomCode","useAuth","useRoom","database","Room","user","params","newQuestion","setNewQuestion","roomId","id","title","questions","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighligted","inAnwsered","ref","push","handleLikeQuestion","questionId","likeId","remove","authorId","logoImg","length","target","value","map","isAnswered","isHiglighted","likeCount"],"mappings":";;;AAAA,SAAoBA,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAGA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AAEA,OAAO,qBAAP;;AAKA,OAAO,SAASC,IAAT,GAAe;AAAA;;AAElB,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,OAAO,EAAxB;AACA,QAAMK,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAMa,MAAM,GAAGH,MAAM,CAACI,EAAtB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBV,OAAO,CAACO,MAAD,CAApC;;AAEA,iBAAeI,kBAAf,CAAkCC,KAAlC,EAAmD;AAC/CA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAGR,WAAW,CAACS,IAAZ,MAAsB,EAAzB,EAA4B;AACxB;AACH;;AAED,QAAI,CAACX,IAAL,EAAU;AACN,YAAM,IAAIY,KAAJ,CAAU,wBAAV,CAAN;AAEH;;AACD,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAEZ,WADI;AAEba,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEhB,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEgB,IADR;AAEJC,QAAAA,MAAM,EAAEjB,IAAI,CAACiB;AAFT,OAFK;AAObC,MAAAA,YAAY,EAAE,KAPD;AAQbC,MAAAA,UAAU,EAAE;AARC,KAAjB;AAWA,UAAMrB,QAAQ,CAACsB,GAAT,CAAc,SAAQhB,MAAO,YAA7B,EAA0CiB,IAA1C,CAA+CR,QAA/C,CAAN;AAEAV,IAAAA,cAAc,CAAC,EAAD,CAAd;AACH;;AAED,iBAAemB,kBAAf,CAAkCC,UAAlC,EAAsDC,MAAtD,EAAiF;AAC9E,QAAIA,MAAJ,EAAW;AACV,YAAM1B,QAAQ,CAACsB,GAAT,CAAc,SAAQhB,MAAO,cAAamB,UAAW,UAASC,MAAO,EAArE,EAAwEC,MAAxE,EAAN;AACA,KAFD,MAEM;AACJ,YAAM3B,QAAQ,CAACsB,GAAT,CAAc,SAAQhB,MAAO,cAAamB,UAAW,SAArD,EAA+DF,IAA/D,CAAoE;AAC1EK,QAAAA,QAAQ,EAAE1B,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK;AAD0D,OAApE,CAAN;AAGD;AACH;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEsB,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE1B,MAAM,CAACI;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,8BAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEKC,SAAS,CAACqB,MAAV,GAAmB,CAAnB,iBAAwB;AAAA,qBAAOrB,SAAS,CAACqB,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAM,QAAA,QAAQ,EAAEpB,kBAAhB;AAAA,gCACI;AACK,UAAA,WAAW,EAAC,+BADjB;AAEK,UAAA,QAAQ,EAAEC,KAAK,IAAIN,cAAc,CAACM,KAAK,CAACoB,MAAN,CAAaC,KAAd,CAFtC;AAGK,UAAA,KAAK,EAAE5B;AAHZ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,qBACKF,IAAI,gBACF;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEA,IAAI,CAACiB,MAAf;AAAuB,cAAA,GAAG,EAAEjB,IAAI,CAACgB;AAAjC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAOhB,IAAI,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,gBAML;AAAA,kEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eASI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,QAAQ,EAAE,CAAChB,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAwBI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACKO,SAAS,CAACwB,GAAV,CAAclB,QAAQ,IAAI;AACvB,8BACI,QAAC,QAAD;AAEI,YAAA,OAAO,EAAEA,QAAQ,CAACC,OAFtB;AAGI,YAAA,MAAM,EAAED,QAAQ,CAACE,MAHrB;AAII,YAAA,UAAU,EAAEF,QAAQ,CAACmB,UAJzB;AAKI,YAAA,aAAa,EAAEnB,QAAQ,CAACoB,YAL5B;AAAA,sBAOK,CAACpB,QAAQ,CAACmB,UAAV,iBACG;AACI,cAAA,SAAS,EAAG,eAAcnB,QAAQ,CAACW,MAAT,GAAkB,OAAlB,GAA4B,EAAG,EAD7D;AAEI,cAAA,IAAI,EAAC,QAFT;AAGI,4BAAW,oBAHf;AAII,cAAA,OAAO,EAAE,MAAMF,kBAAkB,CAACT,QAAQ,CAACR,EAAV,EAAcQ,QAAQ,CAACW,MAAvB,CAJrC;AAAA,yBAMMX,QAAQ,CAACqB,SAAT,GAAqB,CAArB,iBAA2B;AAAA,0BAAOrB,QAAQ,CAACqB;AAAhB;AAAA;AAAA;AAAA;AAAA,sBANjC,eAOI;AAAK,gBAAA,OAAO,EAAC,KAAb;AAAmB,gBAAA,KAAK,EAAC,4BAAzB;AACI,gBAAA,KAAK,EAAC,IADV;AACe,gBAAA,MAAM,EAAC,IADtB;AAC2B,gBAAA,OAAO,EAAC,WADnC;AAEI,gBAAA,mBAAmB,EAAC,eAFxB;AAAA,uCAGI;AAAG,kBAAA,SAAS,EAAC,yDAAb;AACI,kBAAA,IAAI,EAAC,SADT;AACmB,kBAAA,WAAW,EAAC,KAD/B;AAAA,0CAEI;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAMI;AAAM,oBAAA,CAAC,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AARR,aACSrB,QAAQ,CAACR,EADlB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAiCH,SAlCA;AADL;AAAA;AAAA;AAAA;AAAA,cAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyEH;;GApHeN,I;UAEKH,O,EACFJ,S,EAGcK,O;;;KANjBE,I","sourcesContent":["import { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\nexport function Room(){\r\n\r\n    const { user } = useAuth();\r\n    const params = useParams<RoomParams>(); \r\n    const [newQuestion, setNewQuestion] = useState(''); \r\n    const roomId = params.id;\r\n    const { title, questions } = useRoom(roomId)\r\n    \r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault();\r\n        if(newQuestion.trim() == ''){\r\n            return;\r\n        }\r\n        \r\n        if (!user){\r\n            throw new Error('You  must be logged in');\r\n\r\n        }\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user.avatar,\r\n               \r\n            },\r\n            isHighligted: false, \r\n            inAnwsered: false\r\n        };\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question); \r\n\r\n        setNewQuestion(''); \r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string, likeId: string | undefined){\r\n       if (likeId){\r\n        await database.ref(`rooms/${roomId}/questions/${questionId}/likes/${likeId}`).remove()\r\n       }else {\r\n         await database.ref(`rooms/${roomId}/questions/${questionId}/likes/`).push({\r\n         authorId: user?.id,\r\n        })\r\n       }\r\n    }\r\n    return ( \r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />   \r\n                    <RoomCode code={params.id} />              \r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                   { questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                         placeholder=\"O que você quer perguntar?\"\r\n                         onChange={event => setNewQuestion(event.target.value)} \r\n                         value={newQuestion} \r\n                    />\r\n                    <div className=\"form-footer\">\r\n                       { user ? (\r\n                           <div className=\"user-info\"> \r\n                               <img src={user.avatar} alt={user.name}/>\r\n                               <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                        <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n                       ) }\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"question-list\"> \r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question \r\n                                key={question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                                isAnswered={question.isAnswered}\r\n                                isHighlighted={question.isHiglighted}\r\n                            >\r\n                               { !question.isAnswered && (\r\n                                    <button\r\n                                        className={`like-button ${question.likeId ? 'liked' : ''}`}\r\n                                        type=\"button\"\r\n                                        aria-label=\"Marcar como gostei\"\r\n                                        onClick={() => handleLikeQuestion(question.id, question.likeId)}\r\n                                        >\r\n                                        { question.likeCount > 0  && <span>{question.likeCount}</span> }\r\n                                        <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            width=\"24\" height=\"23\" viewBox=\"0 0 24 24\"\r\n                                            preserveAspectRatio=\"xMidYMid meet\">\r\n                                            <g transform=\"translate(0.000000,24.000000) scale(0.100000,-0.100000)\"\r\n                                                fill=\"#000000\" strokeWidth=\"1.5\">\r\n                                                <path d=\"M110 215 c0 -8 -11 -25 -26 -38 -22 -21 -25 -30 -22 -83 l3 -59 57\r\n                                                -3 57 -3 21 41 c28 54 24 84 -12 88 -21 3 -28 9 -28 26 0 25 -17 46 -37 46 -7\r\n                                                0 -13 -7 -13 -15z m25 -45 c-6 -29 -5 -30 29 -30 41 0 43 -5 19 -55 -15 -32\r\n                                                -20 -35 -60 -35 l-43 0 0 46 c0 32 7 54 23 74 29 37 40 37 32 0z\"/>\r\n                                                <path d=\"M20 95 c0 -37 4 -65 10 -65 6 0 10 28 10 65 0 37 -4 65 -10 65 -6 0\r\n                                                -10 -28 -10 -65z\"/>\r\n                                            </g>\r\n                                        </svg>\r\n                                    </button>\r\n                                )}\r\n                            </Question>\r\n                        );      \r\n                    })} \r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}