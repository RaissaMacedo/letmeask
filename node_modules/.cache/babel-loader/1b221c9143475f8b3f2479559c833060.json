{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Question } from \"../components/Question\";\nimport { database } from \"../services/firebase\";\nimport { useAuth } from \"./useAuth\";\nexport function useRoom(roomId) {\n  _s();\n\n  const {} = useAuth();\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.on('value', room => {\n      var _databaseRoom$questio;\n\n      const databaseRoom = room.val();\n      const firebaseQuestions = (_databaseRoom$questio = databaseRoom.questions) !== null && _databaseRoom$questio !== void 0 ? _databaseRoom$questio : {};\n      const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\n        var _value$likes;\n\n        return {\n          id: key,\n          content: value.content,\n          author: value.author,\n          isHiglighted: value.isHiglighted,\n          isAnswered: value.isAnswered,\n          likeCount: Object.values((_value$likes = value.likes) !== null && _value$likes !== void 0 ? _value$likes : {}.length)\n        };\n      });\n      setTitle(databaseRoom.title);\n      setQuestions(parsedQuestions);\n    });\n  }, [roomId]);\n  return {\n    questions,\n    title\n  };\n}\n\n_s(useRoom, \"pWZUuWGHkIsBQs47kcCoi6Ch0ho=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"sources":["C:/nlw/new_aulas/letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","Question","database","useAuth","useRoom","roomId","questions","setQuestions","title","setTitle","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHiglighted","isAnswered","likeCount","values","likes","length"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,OAAT,QAAwB,WAAxB;AA0BA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAgC;AAAA;;AACnC,QAAM,KAAKF,OAAO,EAAlB;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAa,EAAb,CAA1C;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEID,EAAAA,SAAS,CAAC,MAAK;AACf,UAAMW,OAAO,GAAGR,QAAQ,CAACS,GAAT,CAAc,SAAQN,MAAO,EAA7B,CAAhB;AAEAK,IAAAA,OAAO,CAACE,EAAR,CAAW,OAAX,EAAoBC,IAAI,IAAI;AAAA;;AACxB,YAAMC,YAAY,GAAGD,IAAI,CAACE,GAAL,EAArB;AACA,YAAMC,iBAAoC,4BAAGF,YAAY,CAACR,SAAhB,yEAA6B,EAAvE;AAEA,YAAMW,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,CAAC,CAACC,GAAD,EAAMC,KAAN,CAAD,KAAiB;AAAA;;AAC3E,eAAO;AACHC,UAAAA,EAAE,EAAEF,GADD;AAEHG,UAAAA,OAAO,EAAEF,KAAK,CAACE,OAFZ;AAGHC,UAAAA,MAAM,EAAEH,KAAK,CAACG,MAHX;AAIHC,UAAAA,YAAY,EAAEJ,KAAK,CAACI,YAJjB;AAKHC,UAAAA,UAAU,EAAEL,KAAK,CAACK,UALf;AAMHC,UAAAA,SAAS,EAAEV,MAAM,CAACW,MAAP,iBAAcP,KAAK,CAACQ,KAApB,uDAA6B,GAAGC,MAAhC;AANR,SAAP;AASH,OAVuB,CAAxB;AAWAtB,MAAAA,QAAQ,CAACK,YAAY,CAACN,KAAd,CAAR;AACAD,MAAAA,YAAY,CAACU,eAAD,CAAZ;AACH,KAjBD;AAkBH,GArBY,EAqBV,CAACZ,MAAD,CArBU,CAAT;AAuBJ,SAAO;AAAEC,IAAAA,SAAF;AAAaE,IAAAA;AAAb,GAAP;AACH;;GA7BeJ,O;UACDD,O","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { Question } from \"../components/Question\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from \"./useAuth\";\r\n\r\ntype FirebaseQuestions = Record<string, {\r\n    author: {\r\n        name: string,\r\n        avatar: string\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHiglighted: boolean;\r\n    likes: Record<string, {\r\n        authorId: string;\r\n    }>\r\n}>\r\n\r\ntype Question = {\r\nid: string;\r\nauthor: {\r\n    name: string,\r\n    avatar: string\r\n}\r\ncontent: string;\r\nisAnswered: boolean;\r\nisHiglighted: boolean;\r\n}\r\n\r\nexport function useRoom(roomId: string){\r\n    const {} = useAuth();\r\n    const [questions, setQuestions] = useState<Question[]>([])\r\n    const [title, setTitle] = useState('');\r\n\r\n        useEffect(() =>{ \r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n        roomRef.on('value', room => {\r\n            const databaseRoom = room.val();\r\n            const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n\r\n            const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) =>{\r\n                return {\r\n                    id: key,\r\n                    content: value.content,\r\n                    author: value.author,\r\n                    isHiglighted: value.isHiglighted,\r\n                    isAnswered: value.isAnswered,\r\n                    likeCount: Object.values(value.likes ?? {}.length,\r\n                        )\r\n                }\r\n            })\r\n            setTitle(databaseRoom.title);\r\n            setQuestions(parsedQuestions)\r\n        }) \r\n    }, [roomId]);\r\n    \r\n    return { questions, title }\r\n}"]},"metadata":{},"sourceType":"module"}