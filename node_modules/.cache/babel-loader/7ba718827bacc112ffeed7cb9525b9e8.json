{"ast":null,"code":"var _jsxFileName = \"C:\\\\nlw\\\\new_aulas\\\\letmeask\\\\src\\\\pages\\\\Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\n\n  const params = useParams(); //parametros que essa rota vai receber\n\n  const [newQuestion, setNewQuestion] = useState(''); // informacao da nova pergunta\n\n  const roomId = params.id;\n  useEffect(() => {\n    const roomRef = database.ref(`rooms/${roomId}`);\n    roomRef.once('value', room => {\n      var _room$question;\n\n      const parsedQuestion = Object.entries((_room$question = room.question) !== null && _room$question !== void 0 ? _room$question : {});\n    });\n  }, [roomId]);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() == '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You  must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user === null || user === void 0 ? void 0 : user.name,\n        avatar: user.avatar\n      },\n      isHighligted: false,\n      inAnwsered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  return (\n    /*#__PURE__*/\n    //componente\n    _jsxDEV(\"div\", {\n      id: \"page-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImg,\n            alt: \"Letmeask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n            code: params.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Sala React\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" 4 perguntas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendQuestion,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"O que voc\\xEA quer perguntar?\",\n            onChange: event => setNewQuestion(event.target.value) // pegar o valor do input conforme é digitado\n            ,\n            value: newQuestion // caso altere o valor\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-footer\",\n            children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.avatar,\n                alt: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"fa\\xE7a seu login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 57\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !user,\n              children: \"Enviar pergunta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Room, \"/Cy9JTrx4j3AAi323Vd92LDGD9Y=\", false, function () {\n  return [useAuth, useParams];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/nlw/new_aulas/letmeask/src/pages/Room.tsx"],"names":["useEffect","useState","useParams","Button","RoomCode","useAuth","database","Room","user","params","newQuestion","setNewQuestion","roomId","id","roomRef","ref","once","room","parsedQuestion","Object","entries","question","handleSendQuestion","event","preventDefault","trim","Error","content","author","name","avatar","isHighligted","inAnwsered","push","logoImg","target","value"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\r\nimport { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\nexport function Room(){\r\n\r\n\r\n    const { user } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\r\n    const params = useParams<RoomParams>(); //parametros que essa rota vai receber\r\n    const [newQuestion, setNewQuestion] = useState(''); // informacao da nova pergunta\r\n\r\n    const roomId = params.id;\r\n\r\n    useEffect(() =>{\r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n\r\n        roomRef.once('value', room => {\r\n            const parsedQuestion = Object.entries(room.question ?? {})\r\n        }) \r\n    }, [roomId]);\r\n  \r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault();\r\n        if(newQuestion.trim() == ''){\r\n            return;\r\n        }\r\n        \r\n        if (!user){\r\n            throw new Error('You  must be logged in');\r\n\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user.avatar,\r\n               \r\n            },\r\n            isHighligted: false, \r\n            inAnwsered: false\r\n        };\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question); \r\n\r\n        setNewQuestion(''); \r\n    }\r\n\r\n    return ( //componente\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />   \r\n                    <RoomCode code={params.id} />              \r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala React</h1>\r\n                    <span> 4 perguntas</span>\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                         placeholder=\"O que você quer perguntar?\"\r\n                         onChange={event => setNewQuestion(event.target.value)} // pegar o valor do input conforme é digitado\r\n                         value={newQuestion} // caso altere o valor\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                       { user ? (\r\n                           <div className=\"user-info\"> \r\n                               <img src={user.avatar} alt={user.name}/>\r\n                               <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                        <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n                       ) }\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}