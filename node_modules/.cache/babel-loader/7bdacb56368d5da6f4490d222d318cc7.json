{"ast":null,"code":"var _jsxFileName = \"C:\\\\nlw\\\\new_aulas\\\\letmeask\\\\src\\\\pages\\\\Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/useAuth';\nimport { useRoom } from '../hooks/useRoom';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const {\n    user\n  } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\n\n  const params = useParams(); //parametros que essa rota vai receber\n\n  const [newQuestion, setNewQuestion] = useState(''); // informacao da nova pergunta\n\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() == '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You  must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user === null || user === void 0 ? void 0 : user.name,\n        avatar: user.avatar\n      },\n      isHighligted: false,\n      inAnwsered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n    setNewQuestion('');\n  }\n\n  async function handleLikeQuestion(questionId) {\n    const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\n      authorId: user === null || user === void 0 ? void 0 : user.id\n    });\n  }\n\n  return (\n    /*#__PURE__*/\n    //componente\n    _jsxDEV(\"div\", {\n      id: \"page-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImg,\n            alt: \"Letmeask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n            code: params.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Sala \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [questions.length, \" pergunta(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSendQuestion,\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"O que voc\\xEA quer perguntar?\",\n            onChange: event => setNewQuestion(event.target.value) // pegar o valor do input conforme é digitado\n            ,\n            value: newQuestion // caso altere o valor\n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-footer\",\n            children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: user.avatar,\n                alt: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 32\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"fa\\xE7a seu login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 57\n              }, this), \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              disabled: !user,\n              children: \"Enviar pergunta\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-list\",\n          children: questions.map(question => {\n            return /*#__PURE__*/_jsxDEV(Question // element\n            , {\n              content: question.content,\n              author: question.author,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like-button\",\n                type: \"button\",\n                \"aria-label\": \"Marcar como gostei\",\n                onClick: () => handleLikeQuestion(question.id),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n                  version: \"1.0\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  width: \"24\",\n                  height: \"24\",\n                  viewBox: \"0 0 24.000000 24.000000\",\n                  preserveAspectRatio: \"xMidYMid meet\",\n                  children: /*#__PURE__*/_jsxDEV(\"g\", {\n                    transform: \"translate(0.000000,24.000000) scale(0.100000,-0.100000)\",\n                    fill: \"#000000\",\n                    stroke: \"none\",\n                    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M110 215 c0 -8 -11 -25 -26 -38 -22 -21 -25 -30 -22 -83 l3 -59 57\\r -3 57 -3 21 41 c28 54 24 84 -12 88 -21 3 -28 9 -28 26 0 25 -17 46 -37 46 -7\\r 0 -13 -7 -13 -15z m25 -45 c-6 -29 -5 -30 29 -30 41 0 43 -5 19 -55 -15 -32\\r -20 -35 -60 -35 l-43 0 0 46 c0 32 7 54 23 74 29 37 40 37 32 0z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M20 95 c0 -37 4 -65 10 -65 6 0 10 28 10 65 0 37 -4 65 -10 65 -6 0\\r -10 -28 -10 -65z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 29\n              }, this)\n            }, question.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(Room, \"XYMVeuwfXHPVAdm6BT+qm/rIeCU=\", false, function () {\n  return [useAuth, useParams, useRoom];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/nlw/new_aulas/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","Question","RoomCode","useAuth","useRoom","database","Room","user","params","newQuestion","setNewQuestion","roomId","id","title","questions","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighligted","inAnwsered","ref","push","handleLikeQuestion","questionId","newLike","authorId","logoImg","length","target","value","map"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\nexport function Room(){\r\n\r\n    const { user } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\r\n    const params = useParams<RoomParams>(); //parametros que essa rota vai receber\r\n    const [newQuestion, setNewQuestion] = useState(''); // informacao da nova pergunta\r\n    const roomId = params.id;\r\n    const { title, questions } = useRoom(roomId)\r\n    \r\n\r\n    async function handleSendQuestion(event: FormEvent){\r\n        event.preventDefault();\r\n        if(newQuestion.trim() == ''){\r\n            return;\r\n        }\r\n        \r\n        if (!user){\r\n            throw new Error('You  must be logged in');\r\n\r\n        }\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user?.name,\r\n                avatar: user.avatar,\r\n               \r\n            },\r\n            isHighligted: false, \r\n            inAnwsered: false\r\n        };\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question); \r\n\r\n        setNewQuestion(''); \r\n    }\r\n\r\n    async function handleLikeQuestion(questionId: string){\r\n        const newLike = await database.ref(`rooms/${roomId}/questions/${questionId}/likes`).push({\r\n            authorId: user?.id,\r\n        })\r\n    }\r\n    return ( //componente\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />   \r\n                    <RoomCode code={params.id} />              \r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                   { questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n                </div>\r\n\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                         placeholder=\"O que você quer perguntar?\"\r\n                         onChange={event => setNewQuestion(event.target.value)} // pegar o valor do input conforme é digitado\r\n                         value={newQuestion} // caso altere o valor\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                       { user ? (\r\n                           <div className=\"user-info\"> \r\n                               <img src={user.avatar} alt={user.name}/>\r\n                               <span>{user.name}</span>\r\n                            </div>\r\n                        ) : (\r\n                        <span>Para enviar uma pergunta, <button>faça seu login</button>.</span>\r\n                       ) }\r\n                        <Button type=\"submit\" disabled={!user}>Enviar pergunta</Button>\r\n                    </div>\r\n                </form>\r\n                <div className=\"question-list\"> \r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question // element\r\n                                key={question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                            >\r\n                            <button\r\n                                className=\"like-button\"\r\n                                type=\"button\"\r\n                                aria-label=\"Marcar como gostei\"\r\n                                onClick={() => handleLikeQuestion(question.id)}\r\n                                >\r\n                                <span>10</span>\r\n                                <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"24\" height=\"24\" viewBox=\"0 0 24.000000 24.000000\"\r\n                                    preserveAspectRatio=\"xMidYMid meet\">\r\n                                    <g transform=\"translate(0.000000,24.000000) scale(0.100000,-0.100000)\"\r\n                                    fill=\"#000000\" stroke=\"none\">\r\n                                    <path d=\"M110 215 c0 -8 -11 -25 -26 -38 -22 -21 -25 -30 -22 -83 l3 -59 57\r\n                                    -3 57 -3 21 41 c28 54 24 84 -12 88 -21 3 -28 9 -28 26 0 25 -17 46 -37 46 -7\r\n                                    0 -13 -7 -13 -15z m25 -45 c-6 -29 -5 -30 29 -30 41 0 43 -5 19 -55 -15 -32\r\n                                    -20 -35 -60 -35 l-43 0 0 46 c0 32 7 54 23 74 29 37 40 37 32 0z\"/>\r\n                                    <path d=\"M20 95 c0 -37 4 -65 10 -65 6 0 10 28 10 65 0 37 -4 65 -10 65 -6 0\r\n                                    -10 -28 -10 -65z\"/>\r\n                                    </g>\r\n                                </svg>\r\n\r\n                            </button>\r\n                            </Question>\r\n                        );      \r\n                    })} \r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}