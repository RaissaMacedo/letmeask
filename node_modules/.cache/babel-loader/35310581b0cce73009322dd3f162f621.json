{"ast":null,"code":"var _jsxFileName = \"C:\\\\nlw\\\\new_aulas\\\\letmeask\\\\src\\\\pages\\\\AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode';\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  //const { user } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\n  const params = useParams(); //parametros que essa rota vai receber\n\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n  return (\n    /*#__PURE__*/\n    //componente\n    _jsxDEV(\"div\", {\n      id: \"page-room\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: logoImg,\n            alt: \"Letmeask\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n              code: params.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              isOutlined: true,\n              children: \"Encerrar sala\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"Sala \", title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [questions.length, \" pergunta(s)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-list\",\n          children: questions.map(question => {\n            return /*#__PURE__*/_jsxDEV(Question // element\n            , {\n              content: question.content,\n              author: question.author\n            }, question.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(AdminRoom, \"ITJSlEzuts1k3sx7KJfSuP5Uqao=\", false, function () {\n  return [useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["C:/nlw/new_aulas/letmeask/src/pages/AdminRoom.tsx"],"names":["useParams","Button","Question","RoomCode","useRoom","AdminRoom","params","roomId","id","title","questions","logoImg","length","map","question","content","author"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,kBAA1B;;AAGA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AAGA,OAAO,qBAAP;;AAMA,OAAO,SAASC,SAAT,GAAoB;AAAA;;AACvB;AACA,QAAMC,MAAM,GAAGN,SAAS,EAAxB,CAFuB,CAEiB;;AACxC,QAAMO,MAAM,GAAGD,MAAM,CAACE,EAAtB;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBN,OAAO,CAACG,MAAD,CAApC;AAEC;AAAA;AAAS;AACN;AAAK,MAAA,EAAE,EAAC,WAAR;AAAA,8BACI;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEI,OAAV;AAAmB,YAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA,oCACI,QAAC,QAAD;AAAU,cAAA,IAAI,EAAEL,MAAM,CAACE;AAAvB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,UAAU,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACI;AAAA,gCAAUC,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKC,SAAS,CAACE,MAAV,GAAmB,CAAnB,iBAAwB;AAAA,uBAAOF,SAAS,CAACE,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACKF,SAAS,CAACG,GAAV,CAAcC,QAAQ,IAAI;AACvB,gCACI,QAAC,QAAD,CAAU;AAAV;AAEI,cAAA,OAAO,EAAEA,QAAQ,CAACC,OAFtB;AAGI,cAAA,MAAM,EAAED,QAAQ,CAACE;AAHrB,eACSF,QAAQ,CAACN,EADlB;AAAA;AAAA;AAAA;AAAA,oBADJ;AAOH,WARA;AADL;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAgCJ;;GAtCeH,S;UAEGL,S,EAEcI,O;;;KAJjBC,S","sourcesContent":["import { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss';\r\n\r\ntype RoomParams = {\r\n    id: string;\r\n}\r\n\r\nexport function AdminRoom(){\r\n    //const { user } = useAuth(); // apenas usuario autenticado poderá fazer novas perguntas\r\n    const params = useParams<RoomParams>(); //parametros que essa rota vai receber\r\n    const roomId = params.id;\r\n    const { title, questions } = useRoom(roomId)\r\n    \r\n     return ( //componente\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />   \r\n                    <div>\r\n                        <RoomCode code={params.id} /> \r\n                        <Button isOutlined>Encerrar sala</Button>  \r\n                    </div>          \r\n                </div>\r\n            </header>\r\n\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala {title}</h1>\r\n                   { questions.length > 0 && <span>{questions.length} pergunta(s)</span>}\r\n                </div>\r\n\r\n                <div className=\"question-list\">\r\n                    {questions.map(question => {\r\n                        return (\r\n                            <Question // element\r\n                                key={question.id}\r\n                                content={question.content}\r\n                                author={question.author}\r\n                            />\r\n                        );      \r\n                    })} \r\n                </div>\r\n            </main>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}